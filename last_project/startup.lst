


ARM Macro Assembler    Page 1 


    1 00000000         ; <<< Use Configuration Wizard in Context Menu >>>
    2 00000000         ;*******************************************************
                       ***********************
    3 00000000         ;
    4 00000000         ; startup_rvmdk.S - Startup code for use with Keil's uVi
                       sion.
    5 00000000         ;
    6 00000000         ; Copyright (c) 2005-2011 Texas Instruments Incorporated
                       .  All rights reserved.
    7 00000000         ; Software License Agreement
    8 00000000         ; 
    9 00000000         ; Texas Instruments (TI) is supplying this software for 
                       use solely and
   10 00000000         ; exclusively on TI's microcontroller products. The soft
                       ware is owned by
   11 00000000         ; TI and/or its suppliers, and is protected under applic
                       able copyright
   12 00000000         ; laws. You may not combine this software with "viral" o
                       pen-source
   13 00000000         ; software in order to form a larger program.
   14 00000000         ; 
   15 00000000         ; THIS SOFTWARE IS PROVIDED "AS IS" AND WITH ALL FAULTS.
                       
   16 00000000         ; NO WARRANTIES, WHETHER EXPRESS, IMPLIED OR STATUTORY, 
                       INCLUDING, BUT
   17 00000000         ; NOT LIMITED TO, IMPLIED WARRANTIES OF MERCHANTABILITY 
                       AND FITNESS FOR
   18 00000000         ; A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE. TI SHALL 
                       NOT, UNDER ANY
   19 00000000         ; CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL, OR C
                       ONSEQUENTIAL
   20 00000000         ; DAMAGES, FOR ANY REASON WHATSOEVER.
   21 00000000         ; 
   22 00000000         ; This is part of revision 8264 of the EK-LM3S1968 Firmw
                       are Package.
   23 00000000         ;
   24 00000000         ;*******************************************************
                       ***********************
   25 00000000         
   26 00000000         ;*******************************************************
                       ***********************
   27 00000000         ;
   28 00000000         ; <o> Stack Size (in Bytes) <0x0-0xFFFFFFFF:8>
   29 00000000         ;
   30 00000000         ;*******************************************************
                       ***********************
   31 00000000 00001000 
                       Stack   EQU              0x00001000
   32 00000000         
   33 00000000         ;*******************************************************
                       ***********************
   34 00000000         ;
   35 00000000         ; <o> Heap Size (in Bytes) <0x0-0xFFFFFFFF:8>
   36 00000000         ;
   37 00000000         ;*******************************************************
                       ***********************
   38 00000000 00001000 
                       Heap    EQU              0x00001000
   39 00000000         



ARM Macro Assembler    Page 2 


   40 00000000         ;*******************************************************
                       ***********************
   41 00000000         ;
   42 00000000         ; Allocate space for the stack.
   43 00000000         ;
   44 00000000         ;*******************************************************
                       ***********************
   45 00000000                 AREA             STACK, NOINIT, READWRITE, ALIGN
=3
   46 00000000         StackMem
   47 00000000                 SPACE            Stack
   48 00001000         __initial_sp
   49 00001000         
   50 00001000         ;*******************************************************
                       ***********************
   51 00001000         ;
   52 00001000         ; Allocate space for the heap.
   53 00001000         ;
   54 00001000         ;*******************************************************
                       ***********************
   55 00001000                 AREA             HEAP, NOINIT, READWRITE, ALIGN=
3
   56 00000000         __heap_base
   57 00000000         HeapMem
   58 00000000                 SPACE            Heap
   59 00001000         __heap_limit
   60 00001000         
   61 00001000         ;*******************************************************
                       ***********************
   62 00001000         ;
   63 00001000         ; Indicate that the code in this file preserves 8-byte a
                       lignment of the stack.
   64 00001000         ;
   65 00001000         ;*******************************************************
                       ***********************
   66 00001000                 PRESERVE8
   67 00001000         
   68 00001000         ;*******************************************************
                       ***********************
   69 00001000         ;
   70 00001000         ; Place code into the reset code section.
   71 00001000         ;
   72 00001000         ;*******************************************************
                       ***********************
   73 00001000                 AREA             RESET, CODE, READONLY
   74 00000000                 THUMB
   75 00000000         
   76 00000000         ;*******************************************************
                       ***********************
   77 00000000         ;
   78 00000000         ; External declaration for the interrupt handler used by
                        the application.
   79 00000000         ;
   80 00000000         ;*******************************************************
                       ***********************
   81 00000000         
   82 00000000                 EXTERN           TIMERAIntHandler
   83 00000000                 EXTERN           SYSTICKIntHandler
   84 00000000                 EXTERN           UART0IntHandler



ARM Macro Assembler    Page 3 


   85 00000000                 EXTERN           UART2IntHandler
   86 00000000                 EXTERN           UART5IntHandler
   87 00000000         
   88 00000000         ;*******************************************************
                       ***********************
   89 00000000         ;
   90 00000000         ; The vector table.
   91 00000000         ;
   92 00000000         ;*******************************************************
                       ***********************
   93 00000000                 EXPORT           __Vectors
   94 00000000 00000000 
                       __Vectors
                               DCD              __initial_sp ; Top of Stack
   95 00000004 00000000        DCD              Reset_Handler ; Reset Handler
   96 00000008 00000000        DCD              NmiSR       ; NMI Handler
   97 0000000C 00000000        DCD              FaultISR    ; Hard Fault Handle
                                                            r
   98 00000010 00000000        DCD              IntDefaultHandler 
                                                            ; MPU Fault Handler
                                                            
   99 00000014 00000000        DCD              IntDefaultHandler 
                                                            ; Bus Fault Handler
                                                            
  100 00000018 00000000        DCD              IntDefaultHandler ; Usage Fault
                                                             Handler
  101 0000001C 00000000        DCD              0           ; Reserved
  102 00000020 00000000        DCD              0           ; Reserved
  103 00000024 00000000        DCD              0           ; Reserved
  104 00000028 00000000        DCD              0           ; Reserved
  105 0000002C 00000000        DCD              IntDefaultHandler 
                                                            ; SVCall Handler
  106 00000030 00000000        DCD              IntDefaultHandler ; Debug Monit
                                                            or Handler
  107 00000034 00000000        DCD              0           ; Reserved
  108 00000038 00000000        DCD              IntDefaultHandler 
                                                            ; PendSV Handler
  109 0000003C 00000000        DCD              SYSTICKIntHandler 
                                                            ; SysTick Handler
  110 00000040         
  111 00000040         ; External Interrupts
  112 00000040         
  113 00000040 00000000        DCD              IntDefaultHandler 
                                                            ;   0: GPIO Port A
  114 00000044 00000000        DCD              IntDefaultHandler 
                                                            ;   1: GPIO Port B
  115 00000048 00000000        DCD              IntDefaultHandler 
                                                            ;   2: GPIO Port C
  116 0000004C 00000000        DCD              IntDefaultHandler 
                                                            ;   3: GPIO Port D
  117 00000050 00000000        DCD              IntDefaultHandler 
                                                            ;   4: GPIO Port E
  118 00000054 00000000        DCD              UART0IntHandler ;   5: UART0 Rx
                                                             and Tx
  119 00000058 00000000        DCD              IntDefaultHandler ;   6: UART1 
                                                            Rx and Tx
  120 0000005C 00000000        DCD              IntDefaultHandler ;   7: SSI0 R
                                                            x and Tx
  121 00000060 00000000        DCD              IntDefaultHandler ;   8: I2C0 M



ARM Macro Assembler    Page 4 


                                                            aster and Slave
  122 00000064 00000000        DCD              IntDefaultHandler 
                                                            ;   9: PWM Fault
  123 00000068 00000000        DCD              IntDefaultHandler ;  10: PWM Ge
                                                            nerator 0
  124 0000006C 00000000        DCD              IntDefaultHandler ;  11: PWM Ge
                                                            nerator 1
  125 00000070 00000000        DCD              IntDefaultHandler ;  12: PWM Ge
                                                            nerator 2
  126 00000074 00000000        DCD              IntDefaultHandler ;  13: Quadra
                                                            ture Encoder 0
  127 00000078 00000000        DCD              IntDefaultHandler ;  14: ADC Se
                                                            quence 0
  128 0000007C 00000000        DCD              IntDefaultHandler ;  15: ADC Se
                                                            quence 1
  129 00000080 00000000        DCD              IntDefaultHandler ;  16: ADC Se
                                                            quence 2
  130 00000084 00000000        DCD              IntDefaultHandler ;  17: ADC Se
                                                            quence 3
  131 00000088 00000000        DCD              IntDefaultHandler ;  18: Watchd
                                                            og timer
  132 0000008C 00000000        DCD              TIMERAIntHandler ;  19: Timer 0
                                                             subtimer A
  133 00000090 00000000        DCD              IntDefaultHandler ;  20: Timer 
                                                            0 subtimer B
  134 00000094 00000000        DCD              IntDefaultHandler ;  21: Timer 
                                                            1 subtimer A
  135 00000098 00000000        DCD              IntDefaultHandler ;  22: Timer 
                                                            1 subtimer B
  136 0000009C 00000000        DCD              IntDefaultHandler ;  23: Timer 
                                                            2 subtimer A
  137 000000A0 00000000        DCD              IntDefaultHandler ;  24: Timer 
                                                            2 subtimer B
  138 000000A4 00000000        DCD              IntDefaultHandler ;  25: Analog
                                                             Comparator 0
  139 000000A8 00000000        DCD              IntDefaultHandler ;  26: Analog
                                                             Comparator 1
  140 000000AC 00000000        DCD              IntDefaultHandler ;  27: Analog
                                                             Comparator 2
  141 000000B0 00000000        DCD              IntDefaultHandler ;  28: System
                                                             Control (PLL, OSC,
                                                             BO)
  142 000000B4 00000000        DCD              IntDefaultHandler ;  29: FLASH 
                                                            Control
  143 000000B8 00000000        DCD              IntDefaultHandler 
                                                            ;  30: GPIO Port F
  144 000000BC 00000000        DCD              IntDefaultHandler 
                                                            ;  31: GPIO Port G
  145 000000C0 00000000        DCD              IntDefaultHandler 
                                                            ;  32: GPIO Port H
  146 000000C4 00000000        DCD              UART2IntHandler ;  33: UART2 Rx
                                                             and Tx
  147 000000C8 00000000        DCD              IntDefaultHandler ;  34: SSI1 R
                                                            x and Tx
  148 000000CC 00000000        DCD              IntDefaultHandler ;  35: Timer 
                                                            3 subtimer A
  149 000000D0 00000000        DCD              IntDefaultHandler ;  36: Timer 
                                                            3 subtimer B
  150 000000D4 00000000        DCD              IntDefaultHandler ;  37: I2C1 M



ARM Macro Assembler    Page 5 


                                                            aster and Slave
  151 000000D8 00000000        DCD              IntDefaultHandler ;  38: Quadra
                                                            ture Encoder 1
  152 000000DC 00000000        DCD              IntDefaultHandler ;  39: CAN0
  153 000000E0 00000000        DCD              IntDefaultHandler ;  40: CAN1
  154 000000E4 00000000        DCD              IntDefaultHandler ;  41: CAN2
  155 000000E8 00000000        DCD              0           ;  42: Reserved
  156 000000EC 00000000        DCD              IntDefaultHandler 
                                                            ;  43: Hibernate
  157 000000F0 00000000        DCD              IntDefaultHandler ;  44: USB0
  158 000000F4 00000000        DCD              IntDefaultHandler ;  45: PWM Ge
                                                            nerator 3
  159 000000F8 00000000        DCD              IntDefaultHandler ;  46: uDMA S
                                                            oftware Transfer
  160 000000FC 00000000        DCD              IntDefaultHandler 
                                                            ;  47: uDMA Error
  161 00000100 00000000        DCD              IntDefaultHandler ;  48: ADC1 S
                                                            equence 0
  162 00000104 00000000        DCD              IntDefaultHandler ;  49: ADC1 S
                                                            equence 1
  163 00000108 00000000        DCD              IntDefaultHandler ;  50: ADC1 S
                                                            equence 2
  164 0000010C 00000000        DCD              IntDefaultHandler ;  51: ADC1 S
                                                            equence 3
  165 00000110 00000000        DCD              0           ;  52: Reserved
  166 00000114 00000000        DCD              0           ;  53: Reserved
  167 00000118 00000000        DCD              IntDefaultHandler 
                                                            ;  54: GPIO Port J
  168 0000011C 00000000        DCD              IntDefaultHandler 
                                                            ;  55: GPIO Port K
  169 00000120 00000000        DCD              IntDefaultHandler 
                                                            ;  56: GPIO Port L
  170 00000124 00000000        DCD              IntDefaultHandler ;  57: SSI2 R
                                                            x and Tx
  171 00000128 00000000        DCD              IntDefaultHandler ;  58: SSI3 R
                                                            x and Tx
  172 0000012C 00000000        DCD              IntDefaultHandler ;  59: UART3 
                                                            Rx and Tx
  173 00000130 00000000        DCD              IntDefaultHandler ;  60: UART4 
                                                            Rx and Tx
  174 00000134 00000000        DCD              UART5IntHandler ;  61: UART5 Rx
                                                             and Tx
  175 00000138 00000000        DCD              IntDefaultHandler ;  62: UART6 
                                                            Rx and Tx
  176 0000013C 00000000        DCD              IntDefaultHandler ;  63: UART7 
                                                            Rx and Tx
  177 00000140 00000000        DCD              0           ;  64: Reserved
  178 00000144 00000000        DCD              0           ;  65: Reserved
  179 00000148 00000000        DCD              0           ;  66: Reserved
  180 0000014C 00000000        DCD              0           ;  67: Reserved
  181 00000150 00000000        DCD              IntDefaultHandler ;  68: I2C2 M
                                                            aster and Slave
  182 00000154 00000000        DCD              IntDefaultHandler ;  69: I2C3 M
                                                            aster and Slave
  183 00000158 00000000        DCD              IntDefaultHandler ;  70: Timer 
                                                            4 subtimer A
  184 0000015C 00000000        DCD              IntDefaultHandler ;  71: Timer 
                                                            4 subtimer B
  185 00000160 00000000        DCD              0           ;  72: Reserved



ARM Macro Assembler    Page 6 


  186 00000164 00000000        DCD              0           ;  73: Reserved
  187 00000168 00000000        DCD              0           ;  74: Reserved
  188 0000016C 00000000        DCD              0           ;  75: Reserved
  189 00000170 00000000        DCD              0           ;  76: Reserved
  190 00000174 00000000        DCD              0           ;  77: Reserved
  191 00000178 00000000        DCD              0           ;  78: Reserved
  192 0000017C 00000000        DCD              0           ;  79: Reserved
  193 00000180 00000000        DCD              0           ;  80: Reserved
  194 00000184 00000000        DCD              0           ;  81: Reserved
  195 00000188 00000000        DCD              0           ;  82: Reserved
  196 0000018C 00000000        DCD              0           ;  83: Reserved
  197 00000190 00000000        DCD              0           ;  84: Reserved
  198 00000194 00000000        DCD              0           ;  85: Reserved
  199 00000198 00000000        DCD              0           ;  86: Reserved
  200 0000019C 00000000        DCD              0           ;  87: Reserved
  201 000001A0 00000000        DCD              0           ;  88: Reserved
  202 000001A4 00000000        DCD              0           ;  89: Reserved
  203 000001A8 00000000        DCD              0           ;  90: Reserved
  204 000001AC 00000000        DCD              0           ;  91: Reserved
  205 000001B0 00000000        DCD              IntDefaultHandler ;  92: Timer 
                                                            5 subtimer A
  206 000001B4 00000000        DCD              IntDefaultHandler ;  93: Timer 
                                                            5 subtimer B
  207 000001B8 00000000        DCD              IntDefaultHandler ;  94: Wide T
                                                            imer 0 subtimer A
  208 000001BC 00000000        DCD              IntDefaultHandler ;  95: Wide T
                                                            imer 0 subtimer B
  209 000001C0 00000000        DCD              IntDefaultHandler ;  96: Wide T
                                                            imer 1 subtimer A
  210 000001C4 00000000        DCD              IntDefaultHandler ;  97: Wide T
                                                            imer 1 subtimer B
  211 000001C8 00000000        DCD              IntDefaultHandler ;  98: Wide T
                                                            imer 2 subtimer A
  212 000001CC 00000000        DCD              IntDefaultHandler ;  99: Wide T
                                                            imer 2 subtimer B
  213 000001D0 00000000        DCD              IntDefaultHandler ; 100: Wide T
                                                            imer 3 subtimer A
  214 000001D4 00000000        DCD              IntDefaultHandler ; 101: Wide T
                                                            imer 3 subtimer B
  215 000001D8 00000000        DCD              IntDefaultHandler ; 102: Wide T
                                                            imer 4 subtimer A
  216 000001DC 00000000        DCD              IntDefaultHandler ; 103: Wide T
                                                            imer 4 subtimer B
  217 000001E0 00000000        DCD              IntDefaultHandler ; 104: Wide T
                                                            imer 5 subtimer A
  218 000001E4 00000000        DCD              IntDefaultHandler ; 105: Wide T
                                                            imer 5 subtimer B
  219 000001E8 00000000        DCD              IntDefaultHandler ; 106: FPU
  220 000001EC 00000000        DCD              0           ; 107: Reserved
  221 000001F0 00000000        DCD              0           ; 108: Reserved
  222 000001F4 00000000        DCD              IntDefaultHandler ; 109: I2C4 M
                                                            aster and Slave
  223 000001F8 00000000        DCD              IntDefaultHandler ; 110: I2C5 M
                                                            aster and Slave
  224 000001FC 00000000        DCD              IntDefaultHandler 
                                                            ; 111: GPIO Port M
  225 00000200 00000000        DCD              IntDefaultHandler 
                                                            ; 112: GPIO Port N
  226 00000204 00000000        DCD              IntDefaultHandler ; 113: Quadra



ARM Macro Assembler    Page 7 


                                                            ture Encoder 2
  227 00000208 00000000        DCD              0           ; 114: Reserved
  228 0000020C 00000000        DCD              0           ; 115: Reserved
  229 00000210 00000000        DCD              IntDefaultHandler ; 116: GPIO P
                                                            ort P (Summary or P
                                                            0)
  230 00000214 00000000        DCD              IntDefaultHandler 
                                                            ; 117: GPIO Port P1
                                                            
  231 00000218 00000000        DCD              IntDefaultHandler 
                                                            ; 118: GPIO Port P2
                                                            
  232 0000021C 00000000        DCD              IntDefaultHandler 
                                                            ; 119: GPIO Port P3
                                                            
  233 00000220 00000000        DCD              IntDefaultHandler 
                                                            ; 120: GPIO Port P4
                                                            
  234 00000224 00000000        DCD              IntDefaultHandler 
                                                            ; 121: GPIO Port P5
                                                            
  235 00000228 00000000        DCD              IntDefaultHandler 
                                                            ; 122: GPIO Port P6
                                                            
  236 0000022C 00000000        DCD              IntDefaultHandler 
                                                            ; 123: GPIO Port P7
                                                            
  237 00000230 00000000        DCD              IntDefaultHandler ; 124: GPIO P
                                                            ort Q (Summary or Q
                                                            0)
  238 00000234 00000000        DCD              IntDefaultHandler 
                                                            ; 125: GPIO Port Q1
                                                            
  239 00000238 00000000        DCD              IntDefaultHandler 
                                                            ; 126: GPIO Port Q2
                                                            
  240 0000023C 00000000        DCD              IntDefaultHandler 
                                                            ; 127: GPIO Port Q3
                                                            
  241 00000240 00000000        DCD              IntDefaultHandler 
                                                            ; 128: GPIO Port Q4
                                                            
  242 00000244 00000000        DCD              IntDefaultHandler 
                                                            ; 129: GPIO Port Q5
                                                            
  243 00000248 00000000        DCD              IntDefaultHandler 
                                                            ; 130: GPIO Port Q6
                                                            
  244 0000024C 00000000        DCD              IntDefaultHandler 
                                                            ; 131: GPIO Port Q7
                                                            
  245 00000250 00000000        DCD              IntDefaultHandler 
                                                            ; 132: GPIO Port R
  246 00000254 00000000        DCD              IntDefaultHandler 
                                                            ; 133: GPIO Port S
  247 00000258 00000000        DCD              IntDefaultHandler ; 134: PWM 1 
                                                            Generator 0
  248 0000025C 00000000        DCD              IntDefaultHandler ; 135: PWM 1 
                                                            Generator 1



ARM Macro Assembler    Page 8 


  249 00000260 00000000        DCD              IntDefaultHandler ; 136: PWM 1 
                                                            Generator 2
  250 00000264 00000000        DCD              IntDefaultHandler ; 137: PWM 1 
                                                            Generator 3
  251 00000268 00000000        DCD              IntDefaultHandler 
                                                            ; 138: PWM 1 Fault
  252 0000026C         
  253 0000026C         __Vectors_End
  254 0000026C         
  255 0000026C         ;*******************************************************
                       ***********************
  256 0000026C         ;
  257 0000026C         ; This is the code that gets called when the processor f
                       irst starts execution
  258 0000026C         ; following a reset event.
  259 0000026C         ;
  260 0000026C         ;*******************************************************
                       ***********************
  261 0000026C                 EXPORT           Reset_Handler
  262 0000026C         Reset_Handler
  263 0000026C         ;
  264 0000026C         ; Call the C library enty point that handles startup.  T
                       his will copy
  265 0000026C         ; the .data section initializers from flash to SRAM and 
                       zero fill the
  266 0000026C         ; .bss section.
  267 0000026C         ;
  268 0000026C                 IMPORT           __main
  269 0000026C F7FF BFFE       B                __main
  270 00000270         
  271 00000270         ;*******************************************************
                       ***********************
  272 00000270         ;
  273 00000270         ; This is the code that gets called when the processor r
                       eceives a NMI.  This
  274 00000270         ; simply enters an infinite loop, preserving the system 
                       state for examination
  275 00000270         ; by a debugger.
  276 00000270         ;
  277 00000270         ;*******************************************************
                       ***********************
  278 00000270         NmiSR
  279 00000270 E7FE            B                NmiSR
  280 00000272         
  281 00000272         ;*******************************************************
                       ***********************
  282 00000272         ;
  283 00000272         ; This is the code that gets called when the processor r
                       eceives a fault
  284 00000272         ; interrupt.  This simply enters an infinite loop, prese
                       rving the system state
  285 00000272         ; for examination by a debugger.
  286 00000272         ;
  287 00000272         ;*******************************************************
                       ***********************
  288 00000272         FaultISR
  289 00000272 E7FE            B                FaultISR
  290 00000274         
  291 00000274         ;*******************************************************



ARM Macro Assembler    Page 9 


                       ***********************
  292 00000274         ;
  293 00000274         ; This is the code that gets called when the processor r
                       eceives an unexpected
  294 00000274         ; interrupt.  This simply enters an infinite loop, prese
                       rving the system state
  295 00000274         ; for examination by a debugger.
  296 00000274         ;
  297 00000274         ;*******************************************************
                       ***********************
  298 00000274         IntDefaultHandler
  299 00000274 E7FE            B                IntDefaultHandler
  300 00000276         
  301 00000276         ;*******************************************************
                       ***********************
  302 00000276         ;
  303 00000276         ; Make sure the end of this section is aligned.
  304 00000276         ;
  305 00000276         ;*******************************************************
                       ***********************
  306 00000276 00 00           ALIGN
  307 00000278         
  308 00000278         ;*******************************************************
                       ***********************
  309 00000278         ;
  310 00000278         ; Some code in the normal code section for initializing 
                       the heap and stack.
  311 00000278         ;
  312 00000278         ;*******************************************************
                       ***********************
  313 00000278                 AREA             |.text|, CODE, READONLY
  314 00000000         
  315 00000000         
  316 00000000         ;*******************************************************
                       ***********************
  317 00000000         ;
  318 00000000         ; Useful functions.
  319 00000000         ;
  320 00000000         ;*******************************************************
                       ***********************
  321 00000000                 EXPORT           DisableInterrupts
  322 00000000                 EXPORT           EnableInterrupts
  323 00000000                 EXPORT           StartCritical
  324 00000000                 EXPORT           EndCritical
  325 00000000                 EXPORT           WaitForInterrupt
  326 00000000         
  327 00000000         ;*********** DisableInterrupts ***************
  328 00000000         ; disable interrupts
  329 00000000         ; inputs:  none
  330 00000000         ; outputs: none
  331 00000000         DisableInterrupts
  332 00000000 B672            CPSID            I
  333 00000002 4770            BX               LR
  334 00000004         
  335 00000004         ;*********** EnableInterrupts ***************
  336 00000004         ; disable interrupts
  337 00000004         ; inputs:  none
  338 00000004         ; outputs: none
  339 00000004         EnableInterrupts



ARM Macro Assembler    Page 10 


  340 00000004 B662            CPSIE            I
  341 00000006 4770            BX               LR
  342 00000008         
  343 00000008         ;*********** StartCritical ************************
  344 00000008         ; make a copy of previous I bit, disable interrupts
  345 00000008         ; inputs:  none
  346 00000008         ; outputs: previous I bit
  347 00000008         StartCritical
  348 00000008 F3EF 8010       MRS              R0, PRIMASK ; save old status
  349 0000000C B672            CPSID            I           ; mask all (except 
                                                            faults)
  350 0000000E 4770            BX               LR
  351 00000010         
  352 00000010         ;*********** EndCritical ************************
  353 00000010         ; using the copy of previous I bit, restore I bit to pre
                       vious value
  354 00000010         ; inputs:  previous I bit
  355 00000010         ; outputs: none
  356 00000010         EndCritical
  357 00000010 F380 8810       MSR              PRIMASK, R0
  358 00000014 4770            BX               LR
  359 00000016         
  360 00000016         ;*********** WaitForInterrupt ************************
  361 00000016         ; go to low power mode while waiting for the next interr
                       upt
  362 00000016         ; inputs:  none
  363 00000016         ; outputs: none
  364 00000016         WaitForInterrupt
  365 00000016 BF30            WFI
  366 00000018 4770            BX               LR
  367 0000001A         
  368 0000001A                 EXPORT           getHeapBase
  369 0000001A                 EXPORT           getStackBase
  370 0000001A                 EXPORT           getHeapSize
  371 0000001A         
  372 0000001A         ;*******************************************************
                       ***********************
  373 0000001A         ; Returns the address of the heap base
  374 0000001A         ;*******************************************************
                       ***********************
  375 0000001A         getHeapBase
  376 0000001A F240 0000 
              F2C0 0000        MOV32            R0, __heap_base
  377 00000022 4770            BX               LR
  378 00000024         
  379 00000024         ;*******************************************************
                       ***********************
  380 00000024         ; Returns the address of the heap base
  381 00000024         ;*******************************************************
                       ***********************
  382 00000024         getHeapSize
  383 00000024 F240 0000 
              F2C0 0000        MOV32            R0, __heap_base
  384 0000002C F240 0100 
              F2C0 0100        MOV32            R1, __heap_limit
  385 00000034 EBA1 0000       SUB              R0, R1, R0
  386 00000038 4770            BX               LR
  387 0000003A         
  388 0000003A         ;*******************************************************



ARM Macro Assembler    Page 11 


                       ***********************
  389 0000003A         ; Returns the address of the heap base
  390 0000003A         ;*******************************************************
                       ***********************
  391 0000003A         getStackBase
  392 0000003A F240 0000 
              F2C0 0000        MOV32            R0, StackMem
  393 00000042 4770            BX               LR
  394 00000044         
  395 00000044         ;*******************************************************
                       ***********************
  396 00000044         ;
  397 00000044         ; The function expected of the C library startup code fo
                       r defining the stack
  398 00000044         ; and heap memory locations.  For the C library version 
                       of the startup code,
  399 00000044         ; provide this function so that the C library initializa
                       tion code can find out
  400 00000044         ; the location of the stack and heap.
  401 00000044         ;
  402 00000044         ;*******************************************************
                       ***********************
  403 00000044                 IF               :DEF: __MICROLIB
  404 00000044                 EXPORT           __initial_sp
  405 00000044                 EXPORT           __heap_base
  406 00000044                 EXPORT           __heap_limit
  407 00000044                 ELSE
  416                          ENDIF
  417 00000044         
  418 00000044         ;*******************************************************
                       ***********************
  419 00000044         ;
  420 00000044         ; Make sure the end of this section is aligned.
  421 00000044         ;
  422 00000044         ;*******************************************************
                       ***********************
  423 00000044                 ALIGN
  424 00000044         
  425 00000044         ;*******************************************************
                       ***********************
  426 00000044         ;
  427 00000044         ; Tell the assembler that we're done.
  428 00000044         ;
  429 00000044         ;*******************************************************
                       ***********************
  430 00000044                 END
Command Line: --debug --xref --cpu=Cortex-M4 --apcs=interwork --depend=.\startu
p.d -o.\startup.o -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\PACK\ARM\CMSIS\3.20.4\CM
SIS\Include -IC:\Keil\ARM\Inc\Luminary --predefine="__EVAL SETA 1" --predefine=
"__MICROLIB SETA 1" --list=.\startup.lst Startup.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

STACK 00000000

Symbol: STACK
   Definitions
      At line 45 in file Startup.s
   Uses
      None
Comment: STACK unused
StackMem 00000000

Symbol: StackMem
   Definitions
      At line 46 in file Startup.s
   Uses
      At line 392 in file Startup.s
Comment: StackMem used once
__initial_sp 00001000

Symbol: __initial_sp
   Definitions
      At line 48 in file Startup.s
   Uses
      At line 94 in file Startup.s
      At line 404 in file Startup.s

3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

HEAP 00000000

Symbol: HEAP
   Definitions
      At line 55 in file Startup.s
   Uses
      None
Comment: HEAP unused
HeapMem 00000000

Symbol: HeapMem
   Definitions
      At line 57 in file Startup.s
   Uses
      None
Comment: HeapMem unused
__heap_base 00000000

Symbol: __heap_base
   Definitions
      At line 56 in file Startup.s
   Uses
      At line 376 in file Startup.s
      At line 383 in file Startup.s
      At line 405 in file Startup.s

__heap_limit 00001000

Symbol: __heap_limit
   Definitions
      At line 59 in file Startup.s
   Uses
      At line 384 in file Startup.s
      At line 406 in file Startup.s

4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

FaultISR 00000272

Symbol: FaultISR
   Definitions
      At line 288 in file Startup.s
   Uses
      At line 97 in file Startup.s
      At line 289 in file Startup.s

IntDefaultHandler 00000274

Symbol: IntDefaultHandler
   Definitions
      At line 298 in file Startup.s
   Uses
      At line 98 in file Startup.s
      At line 99 in file Startup.s
      At line 100 in file Startup.s
      At line 105 in file Startup.s
      At line 106 in file Startup.s
      At line 108 in file Startup.s
      At line 113 in file Startup.s
      At line 114 in file Startup.s
      At line 115 in file Startup.s
      At line 116 in file Startup.s
      At line 117 in file Startup.s
      At line 119 in file Startup.s
      At line 120 in file Startup.s
      At line 121 in file Startup.s
      At line 122 in file Startup.s
      At line 123 in file Startup.s
      At line 124 in file Startup.s
      At line 125 in file Startup.s
      At line 126 in file Startup.s
      At line 127 in file Startup.s
      At line 128 in file Startup.s
      At line 129 in file Startup.s
      At line 130 in file Startup.s
      At line 131 in file Startup.s
      At line 133 in file Startup.s
      At line 134 in file Startup.s
      At line 135 in file Startup.s
      At line 136 in file Startup.s
      At line 137 in file Startup.s
      At line 138 in file Startup.s
      At line 139 in file Startup.s
      At line 140 in file Startup.s
      At line 141 in file Startup.s
      At line 142 in file Startup.s
      At line 143 in file Startup.s
      At line 144 in file Startup.s
      At line 145 in file Startup.s
      At line 147 in file Startup.s
      At line 148 in file Startup.s
      At line 149 in file Startup.s
      At line 150 in file Startup.s
      At line 151 in file Startup.s
      At line 152 in file Startup.s
      At line 153 in file Startup.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

      At line 154 in file Startup.s
      At line 156 in file Startup.s
      At line 157 in file Startup.s
      At line 158 in file Startup.s
      At line 159 in file Startup.s
      At line 160 in file Startup.s
      At line 161 in file Startup.s
      At line 162 in file Startup.s
      At line 163 in file Startup.s
      At line 164 in file Startup.s
      At line 167 in file Startup.s
      At line 168 in file Startup.s
      At line 169 in file Startup.s
      At line 170 in file Startup.s
      At line 171 in file Startup.s
      At line 172 in file Startup.s
      At line 173 in file Startup.s
      At line 175 in file Startup.s
      At line 176 in file Startup.s
      At line 181 in file Startup.s
      At line 182 in file Startup.s
      At line 183 in file Startup.s
      At line 184 in file Startup.s
      At line 205 in file Startup.s
      At line 206 in file Startup.s
      At line 207 in file Startup.s
      At line 208 in file Startup.s
      At line 209 in file Startup.s
      At line 210 in file Startup.s
      At line 211 in file Startup.s
      At line 212 in file Startup.s
      At line 213 in file Startup.s
      At line 214 in file Startup.s
      At line 215 in file Startup.s
      At line 216 in file Startup.s
      At line 217 in file Startup.s
      At line 218 in file Startup.s
      At line 219 in file Startup.s
      At line 222 in file Startup.s
      At line 223 in file Startup.s
      At line 224 in file Startup.s
      At line 225 in file Startup.s
      At line 226 in file Startup.s
      At line 229 in file Startup.s
      At line 230 in file Startup.s
      At line 231 in file Startup.s
      At line 232 in file Startup.s
      At line 233 in file Startup.s
      At line 234 in file Startup.s
      At line 235 in file Startup.s
      At line 236 in file Startup.s
      At line 237 in file Startup.s
      At line 238 in file Startup.s
      At line 239 in file Startup.s
      At line 240 in file Startup.s
      At line 241 in file Startup.s
      At line 242 in file Startup.s
      At line 243 in file Startup.s
      At line 244 in file Startup.s



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

      At line 245 in file Startup.s
      At line 246 in file Startup.s
      At line 247 in file Startup.s
      At line 248 in file Startup.s
      At line 249 in file Startup.s
      At line 250 in file Startup.s
      At line 251 in file Startup.s
      At line 299 in file Startup.s

NmiSR 00000270

Symbol: NmiSR
   Definitions
      At line 278 in file Startup.s
   Uses
      At line 96 in file Startup.s
      At line 279 in file Startup.s

RESET 00000000

Symbol: RESET
   Definitions
      At line 73 in file Startup.s
   Uses
      None
Comment: RESET unused
Reset_Handler 0000026C

Symbol: Reset_Handler
   Definitions
      At line 262 in file Startup.s
   Uses
      At line 95 in file Startup.s
      At line 261 in file Startup.s

__Vectors 00000000

Symbol: __Vectors
   Definitions
      At line 94 in file Startup.s
   Uses
      At line 93 in file Startup.s
Comment: __Vectors used once
__Vectors_End 0000026C

Symbol: __Vectors_End
   Definitions
      At line 253 in file Startup.s
   Uses
      None
Comment: __Vectors_End unused
7 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 313 in file Startup.s
   Uses
      None
Comment: .text unused
DisableInterrupts 00000000

Symbol: DisableInterrupts
   Definitions
      At line 331 in file Startup.s
   Uses
      At line 321 in file Startup.s
Comment: DisableInterrupts used once
EnableInterrupts 00000004

Symbol: EnableInterrupts
   Definitions
      At line 339 in file Startup.s
   Uses
      At line 322 in file Startup.s
Comment: EnableInterrupts used once
EndCritical 00000010

Symbol: EndCritical
   Definitions
      At line 356 in file Startup.s
   Uses
      At line 324 in file Startup.s
Comment: EndCritical used once
StartCritical 00000008

Symbol: StartCritical
   Definitions
      At line 347 in file Startup.s
   Uses
      At line 323 in file Startup.s
Comment: StartCritical used once
WaitForInterrupt 00000016

Symbol: WaitForInterrupt
   Definitions
      At line 364 in file Startup.s
   Uses
      At line 325 in file Startup.s
Comment: WaitForInterrupt used once
getHeapBase 0000001A

Symbol: getHeapBase
   Definitions
      At line 375 in file Startup.s
   Uses
      At line 368 in file Startup.s
Comment: getHeapBase used once
getHeapSize 00000024

Symbol: getHeapSize



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 382 in file Startup.s
   Uses
      At line 370 in file Startup.s
Comment: getHeapSize used once
getStackBase 0000003A

Symbol: getStackBase
   Definitions
      At line 391 in file Startup.s
   Uses
      At line 369 in file Startup.s
Comment: getStackBase used once
9 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

Heap 00001000

Symbol: Heap
   Definitions
      At line 38 in file Startup.s
   Uses
      At line 58 in file Startup.s
Comment: Heap used once
Stack 00001000

Symbol: Stack
   Definitions
      At line 31 in file Startup.s
   Uses
      At line 47 in file Startup.s
Comment: Stack used once
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

SYSTICKIntHandler 00000000

Symbol: SYSTICKIntHandler
   Definitions
      At line 83 in file Startup.s
   Uses
      At line 109 in file Startup.s
Comment: SYSTICKIntHandler used once
TIMERAIntHandler 00000000

Symbol: TIMERAIntHandler
   Definitions
      At line 82 in file Startup.s
   Uses
      At line 132 in file Startup.s
Comment: TIMERAIntHandler used once
UART0IntHandler 00000000

Symbol: UART0IntHandler
   Definitions
      At line 84 in file Startup.s
   Uses
      At line 118 in file Startup.s
Comment: UART0IntHandler used once
UART2IntHandler 00000000

Symbol: UART2IntHandler
   Definitions
      At line 85 in file Startup.s
   Uses
      At line 146 in file Startup.s
Comment: UART2IntHandler used once
UART5IntHandler 00000000

Symbol: UART5IntHandler
   Definitions
      At line 86 in file Startup.s
   Uses
      At line 174 in file Startup.s
Comment: UART5IntHandler used once
__main 00000000

Symbol: __main
   Definitions
      At line 268 in file Startup.s
   Uses
      At line 269 in file Startup.s
Comment: __main used once
6 symbols
363 symbols in table
